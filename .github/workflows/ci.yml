name: ci

on:
  push:
    paths:
    - "**.m"
    - "**.h"
    - "**.cpp"
    - ".github/workflows/ci.yml"
    - ".github/workflows/*/action.yml"
    - "!private/publish_gen_index_html.m"
    - "!scripts/**"

# avoid wasted runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  matlab-at-least-r2024a:
    timeout-minutes: &timeout 15
    runs-on: ${{ matrix.os }}

    name: &job-name ${{ matrix.release }}-${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2025, macos-latest]
        release: [R2024a, R2024b, R2025a]
# on Linux, even R2025a needs GCC 10.x and hence Github Actions runner ubuntu-22.04.
# R2021a...R2022a officially need Ubuntu 20.04, which is no longer available on Github Actions
# macOS >= R2023b to be compatible with Xcode version on Github Actions runner

    steps:
    - &matlab-install
      name: Install MATLAB
      uses: matlab-actions/setup-matlab@v2
      with:
        release: ${{ matrix.release }}
        cache: true

    - &mac-fc
      name: Fortran FC
      if: runner.os == 'macOS'
      run: echo "FC=gfortran-14" >> $GITHUB_ENV

    - &checkout
      uses: actions/checkout@v4

    - &tell-ext
      name: Matlab tell External Language Interface versions
      uses: matlab-actions/run-command@v2
      with:
        command: license('inuse'), stdlib.platform_tell()

    - &code-issues
      name: Check codeIssues
      if: ${{ matrix.release >= 'R2024a' }}
      uses: matlab-actions/run-build@v2
      with:
        tasks: check
    # Matlab < R2024a has false positives that would break tests

    - &test-main
      name: Main Tests
      uses: ./.github/workflows/composite-nomex


  matlab:
    needs: matlab-at-least-r2024a
    timeout-minutes:  *timeout
    runs-on: ${{ matrix.os }}

    name: *job-name

    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest]
        release: [R2022a, R2022b, R2023a, R2023b]

    steps:
    - *matlab-install
    - *mac-fc
    - *checkout
    - *tell-ext

    - *test-main


  matlab-less-than-R2022a:
    needs: matlab-at-least-r2024a

    name: *job-name

    timeout-minutes: *timeout
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04]
        release: [R2021a, R2021b]

    steps:
    - *matlab-install
    - *checkout
    - *tell-ext

    - *test-main


  NoJVM:
    timeout-minutes: *timeout

    name: *job-name

    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        release: [R2022b, R2025a]
        startup-options: ["-nojvm"]

    runs-on: ${{ matrix.os }}

    steps:
    - *matlab-install
    - *checkout
    - *mac-fc
    - *tell-ext

    - *test-main
