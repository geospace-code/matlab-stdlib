classdef TestNormalize < matlab.unittest.TestCase

properties (TestParameter)
p = init_norm()
d = init_drop_slash()
end

methods (Test)
function test_normalize(tc, p)
tc.verifyEqual(stdlib.normalize(p{1}), p{2})
end

function test_drop_slash(tc, d)
tc.verifyEqual(stdlib.drop_slash(d{1}), d{2})
end

end

end

function p = init_norm()

p = {
  {"", "."}, ...
  {"a/..", "."}, ...
  {"//a/b/", "/a/b"}, ...
  {"/a/b/", "/a/b"},  ...
  {"a/b/", "a/b"}, ...
  {"a/../c", "c"}, ...
  {"a/b/../c", "a/c"}, ...
  {"a/b/../../c", "c"}, ...
  {"a/b/../../c/..", "."}, ...
  {"a/b/../../c/../..", ".."}, ...
  {"a////b", "a/b"}, ...
  {".a", ".a"}, ...
  {"..a", "..a"}, ...
  {"a.", "a."}, ...
  {"a..", "a.."}, ...
  {"./a/.", "a"}, ...
  {"../a", "../a"}
};

if ispc
  p{3}{2} = "//a/b";
end
end


function d = init_drop_slash()
d = {...
{"", ""}, ...
{'a', 'a'}, ...
{"a/", "a"}, ...
{"a/b", "a/b"}, ...
{"a/b/", "a/b"}, ...
{"////", "/"}, ...
{"a////b", "a/b"}, ...
{"a//b//", "a/b"}, ...
{"///", "/"}, ...
{'/', '/'}};
if ispc()
  dd = {...
    {"c:/", "c:/"}, ...
    {"c://", "c:/"}, ...
    {"c:///a/b//", "c:/a/b"}, ...
    {"c:/a/b//", "c:/a/b"}
  };
  d = [d, dd];
end
end
