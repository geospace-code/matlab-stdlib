classdef (SharedTestFixtures={ matlab.unittest.fixtures.PathFixture(fileparts(fileparts(mfilename('fullpath'))))}, ...
          TestTags = {'R2017b', 'pure'}) ...
    TestNormalize < matlab.unittest.TestCase

properties (TestParameter)
p = {
  {"", "."}, ...
  {"a/..", "a/.."}, ...
  {"/a/b/", "/a/b"},  ...
  {"a/b/", "a/b"}, ...
  {'a////b', 'a/b'}, ...
  {".a", ".a"}, ...
  {"..a", "..a"}, ...
  {"a.", "a."}, ...
  {"a..", "a.."}, ...
  {"./a/.", "a"}, ...
  {"../a", "../a"}
};
d = init_drop_slash()
end


methods (Test)

function test_normalize(tc, p)
c = stdlib.normalize(p{1});

tc.verifyEqual(c, p{2}, ...
  sprintf('normalize(%s)', p{1}))
end

function test_drop_slash(tc, d)
tc.verifyEqual(stdlib.drop_slash(d{1}), d{2}, ...
  sprintf('drop_slash(%s)', d{1}))
end

end

end


function d = init_drop_slash()
d = {...
{"", ""}, ...
{"/", "/"}, ...
{"a/", "a"}, ...
{"a/b", "a/b"}, ...
{'a/b/', 'a/b'}, ...
{"////", "/"}, ...
{"a////b", "a/b"}, ...
{"a//b//", "a/b"}, ...
{"///", "/"}};
if ispc()
  dd = {...
    {"c:/", "c:/"}, ...
    {"c://", "c:/"}, ...
    {"c:\\", "c:/"}, ...
    {"c:///a/b//", "c:/a/b"}, ...
    {"c:/a/b//", "c:/a/b"}
  };
  d = [d, dd];
end

end
